name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        chapter: [chapter01, chapter02, chapter03, chapter04, chapter05, chapter06]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up MSVC
      uses: microsoft/setup-msbuild@v1.1

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Set up Ninja
      uses: lukka/get-ninja@latest

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.9'
        arch: 'win64_msvc2019_64'
        cache: true

    - name: Create build directory
      run: |
        mkdir build -Force
        echo "Build directory created"

    - name: Build chapter ${{ matrix.chapter }}
      run: |
        $chapterPath = "chapters/${{ matrix.chapter }}/code"
        Write-Host "Building chapter: ${{ matrix.chapter }}"
        Write-Host "Chapter path: $chapterPath"

        if (Test-Path $chapterPath) {
          Write-Host "Chapter directory exists, checking for CMakeLists.txt"
          if (Test-Path "$chapterPath/CMakeLists.txt") {
            Write-Host "Found CMakeLists.txt, starting build process"
            cd $chapterPath

            # Create build directory if it doesn't exist
            if (!(Test-Path "build")) {
              mkdir build
              Write-Host "Created build directory"
            }

            cd build
            Write-Host "Configuring with CMake..."
            cmake .. -G Ninja

            Write-Host "Building with Ninja..."
            ninja

            Write-Host "Build completed successfully for chapter ${{ matrix.chapter }}"
            cd ../../..
          } else {
            Write-Host "No CMakeLists.txt found in $chapterPath, skipping chapter ${{ matrix.chapter }}"
          }
        } else {
          Write-Host "Chapter directory $chapterPath not found, skipping"
        }
      shell: powershell

    - name: Upload build logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs-${{ matrix.chapter }}
        path: |
          **/build/CMakeCache.txt
          **/build/*.log
          **/build/*.txt

  latex:
    runs-on: windows-latest
    name: Build LaTeX documents

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install TeX Live
      uses: xu-cheng/texlive-action@v2
      with:
        scheme: full
        packages: |
          ctex
          minted
          xcolor
          hyperref
          booktabs
          multirow
          multicol
          float
          tikz
          pgfplots
          tcolorbox
          fontspec

    - name: Build LaTeX documents
      run: |
        cd chapters
        Write-Host "Building LaTeX documents..."

        # 编译所有章节
        for ($i = 1; $i -le 6; $i++) {
          $chapterDir = "chapter{0:D2}" -f $i
          $chapterFile = "$chapterDir.tex"

          Write-Host "Building $chapterDir..."

          if (Test-Path $chapterDir) {
            cd $chapterDir

            # 清理旧文件
            Get-ChildItem "*.aux", "*.log", "*.out", "*.toc", "*.nav", "*.snm", "*.vrb" -ErrorAction SilentlyContinue | Remove-Item -Force
            Get-ChildItem "_minted-*" -Directory -ErrorAction SilentlyContinue | Remove-Item -Recurse -Force

            # 第一次编译
            Write-Host "First compilation of $chapterFile..."
            xelatex -shell-escape -interaction=nonstopmode $chapterFile

            if ($LASTEXITCODE -eq 0) {
              # 第二次编译（处理交叉引用）
              Write-Host "Second compilation of $chapterFile..."
              xelatex -shell-escape -interaction=nonstopmode $chapterFile

              if ($LASTEXITCODE -eq 0) {
                Write-Host "$chapterDir compiled successfully!"
              } else {
                Write-Host "Error: Second compilation failed for $chapterDir"
                exit 1
              }
            } else {
              Write-Host "Error: First compilation failed for $chapterDir"
              exit 1
            }

            cd ..
          } else {
            Write-Host "Warning: Directory $chapterDir not found, skipping"
          }
        }

        Write-Host "All LaTeX documents built successfully!"
      shell: powershell

    - name: Upload PDF artifacts
      uses: actions/upload-artifact@v3
      with:
        name: latex-pdfs
        path: chapters/chapter*/chapter*.pdf
